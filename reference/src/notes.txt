Section 15 Forms - Note

Angular job is to retrieve the value from the form and validate it. 
Need javascript object representation to represent value of the form.

{
    value: {
        name: 'Me',
        email: 'me@gmail.com'
    },
    valid: true 
}

Template Driven (TD) vs Reactive Approach
TD : Angular infers the Form object from the DOM 
Reactive : Form is created programmatically and sync with the DOM (more complex)

Form gak ada action dan method. Angular should handle this.

Pastikan import FormsModule.
Tambahkan ngModel di dalam <input : The control of the form 

Best place untuk naro trigger onSubmit adalah di <form (ngSubmit)="onSubmit(f)" #f="ngForm">

form:HTMLFormElement

Gunakan ViewChild juga bisa.

Which Validators do ship with Angular? 

Check out the Validators class: https://angular.io/api/forms/Validators - these are all built-in validators, though that are the methods which actually get executed (and which you later can add when using the reactive approach).

For the template-driven approach, you need the directives. You can find out their names, by searching for "validator" in the official docs: https://angular.io/api?type=directive - everything marked with "D" is a directive and can be added to your template.

Additionally, you might also want to enable HTML5 validation (by default, Angular disables it). You can do so by adding the ngNativeValidate  to a control in your template.

Disabled button when !f.valid
Border 1px solid red.

ngModel : memberi tahu angular kalau input ini kita kontrol
[ngModel] : control dengan default value 
([ngModel]) : two-way binding, outputing value